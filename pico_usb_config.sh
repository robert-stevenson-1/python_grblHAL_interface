#!/bin/bash

# Luckfox Pico Plus USB Network Configuration Script
# Usage: ./configure_pico_usb.sh <usb_interface> [internet_interface] [--share-internet]

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
PICO_IP="192.168.137.254"
HOST_IP="192.168.137.1"
SUBNET="192.168.137.0/24"
NETMASK="255.255.255.0"

usage() {
    echo -e "${BLUE}Luckfox Pico Plus USB Network Configuration${NC}"
    echo ""
    echo "Usage: $0 <usb_interface> [internet_interface] [--share-internet]"
    echo ""
    echo "Arguments:"
    echo "  usb_interface      - USB network interface created by Pico (e.g., usb0, enp0s29u1u2)"
    echo "  internet_interface - Your internet connection interface (e.g., eth0, wlan0) [optional]"
    echo "  --share-internet   - Enable internet sharing to Pico [optional]"
    echo ""
    echo "Examples:"
    echo "  $0 usb0                           # Basic USB connection"
    echo "  $0 usb0 eth0 --share-internet     # USB connection with internet sharing"
    echo "  $0 enp0s29u1u2 wlan0              # Different interface names"
    echo ""
    echo "After running, you can SSH to Pico with:"
    echo "  ssh root@${PICO_IP}"
}

log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

check_root() {
    if [[ $EUID -ne 0 ]]; then
        error "This script must be run as root (use sudo)"
    fi
}

check_interface_exists() {
    local interface=$1
    if ! ip link show "$interface" &>/dev/null; then
        error "Interface '$interface' not found. Available interfaces:"
        ip link show | grep -E "^[0-9]+:" | awk '{print "  " $2}' | sed 's/:$//'
        exit 1
    fi
}

configure_usb_interface() {
    local usb_iface=$1
    
    log "Configuring USB interface: $usb_iface"
    
    # Bring interface up
    ip link set "$usb_iface" up
    
    # Remove any existing IP addresses
    ip addr flush dev "$usb_iface" 2>/dev/null || true
    
    # Add host IP address
    ip addr add "${HOST_IP}/24" dev "$usb_iface"
    
    log "USB interface configured: $usb_iface -> $HOST_IP"
}

setup_internet_sharing() {
    local usb_iface=$1
    local inet_iface=$2
    
    log "Setting up internet sharing: $inet_iface -> $usb_iface"
    
    # Enable IP forwarding
    echo 1 > /proc/sys/net/ipv4/ip_forward
    
    # Remove existing rules to avoid duplicates
    iptables -t nat -D POSTROUTING -o "$inet_iface" -j MASQUERADE 2>/dev/null || true
    iptables -D FORWARD -i "$usb_iface" -o "$inet_iface" -j ACCEPT 2>/dev/null || true
    iptables -D FORWARD -i "$inet_iface" -o "$usb_iface" -m state --state RELATED,ESTABLISHED -j ACCEPT 2>/dev/null || true
    
    # Add NAT and forwarding rules
    iptables -t nat -A POSTROUTING -o "$inet_iface" -j MASQUERADE
    iptables -A FORWARD -i "$usb_iface" -o "$inet_iface" -j ACCEPT
    iptables -A FORWARD -i "$inet_iface" -o "$usb_iface" -m state --state RELATED,ESTABLISHED -j ACCEPT
    
    log "Internet sharing enabled: $inet_iface -> $usb_iface"
}

test_connection() {
    log "Testing connection to Pico..."
    
    if ping -c 3 -W 2 "$PICO_IP" &>/dev/null; then
        log "✓ Pico is reachable at $PICO_IP"
        echo -e "${GREEN}You can now SSH with: ssh root@${PICO_IP}${NC}"
    else
        warn "✗ Cannot reach Pico at $PICO_IP"
        echo "This is normal if the Pico is not connected yet."
        echo "Connect the Pico via USB and try: ping $PICO_IP"
    fi
}

save_persistent_config() {
    local usb_iface=$1
    local config_file="/etc/network/interfaces.d/pico-usb"
    
    log "Saving persistent configuration to $config_file"
    
    cat > "$config_file" << EOF
# Luckfox Pico Plus USB Configuration
# Generated by configure_pico_usb.sh

auto $usb_iface
iface $usb_iface inet static
    address $HOST_IP
    netmask $NETMASK
    post-up echo "Pico USB interface configured: $usb_iface"
EOF
    
    log "Configuration saved. Will persist after reboot."
}

show_status() {
    local usb_iface=$1
    
    echo ""
    echo -e "${BLUE}=== Configuration Status ===${NC}"
    echo -e "USB Interface: ${GREEN}$usb_iface${NC}"
    echo -e "Host IP: ${GREEN}$HOST_IP${NC}"
    echo -e "Pico IP: ${GREEN}$PICO_IP${NC}"
    echo -e "IP Forwarding: ${GREEN}$(cat /proc/sys/net/ipv4/ip_forward)${NC}"
    echo ""
    echo -e "${BLUE}=== Interface Details ===${NC}"
    ip addr show "$usb_iface" 2>/dev/null || echo "Interface not configured"
    echo ""
}

main() {
    # Parse arguments
    if [[ $# -lt 1 ]] || [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
        usage
        exit 0
    fi
    
    local usb_iface="$1"
    local inet_iface="$2"
    local share_internet=false
    
    # Check for --share-internet flag
    for arg in "$@"; do
        if [[ "$arg" == "--share-internet" ]]; then
            share_internet=true
            break
        fi
    done
    
    # Validate inputs
    check_root
    check_interface_exists "$usb_iface"
    
    if [[ -n "$inet_iface" ]] && [[ "$inet_iface" != "--share-internet" ]]; then
        check_interface_exists "$inet_iface"
    fi
    
    # If internet sharing requested but no interface specified
    if [[ "$share_internet" == true ]] && [[ -z "$inet_iface" || "$inet_iface" == "--share-internet" ]]; then
        error "Internet sharing requires specifying an internet interface"
    fi
    
    log "Starting Luckfox